[server]
##################################
# Server configuration
#
# bind      - comma separated list of interfaces to bind
#             -<addr>:port - bind to address and port
#             - unix://path/socket:XXX - bind to socket (absolute path)
#             - unix://./path/socket:XXX - bind to socket (relative path)
#                - where XXX are octal permissions (for instance: 666)
# threads    - count of running threads processing the requests
# dispatchers - count of socket dispatchers. There should be 
#                  1 per expected 64 connections. The value also need
#                  to be less or equal to count of threads
# map_hosts - comma separated mapping for hosts
#                 * - identity mapping
#                 host/path - for specified host, define root path
#                 or example: www.example.com/api/service
# user 		- specify user, or user:group (seteuid)
# web_client - absolute or relative path to RPC client. 
#                 If missing, the client is not available
#                                                  
# log_level - level of logging: debug, info, warning, error, fatal
# log_file - path to log file   
##################################
bind=127.0.0.1:6111,unix://./run/loginsrv.socket:666
log_file=../log/loginsrv.log
log_level=debug
threads=8
dispatchers=2
map_hosts=*,www.example.com/loginserver
# user=
web_client=../client


[login]
##################################
# Login parameters
#
# private_key        - servers private key
# user_config        - custom configuration send when user is logged in
# token_expiration   - time in seconds when each token expires
# token_refresh_expiration - time in seconds, when token can be refreshed after expiration
# captcha_svc          - command/script to validate captcha
#                          the captcha challenge is read on stdin. The script
#                          returns 0, for a valid captcha, and non-zero for failure
# mail_svc         - shell command or script which is responsible to generate and deliver
#                     an email to the user
#                     the data for the command or script are send through pipe 
#                     (the script must read stdin)
#                     the data are send as json format 
#                     {"recepient":"email","template":"template-name":"data":{...template data...}}
#
# mail_template_prefix - the login server uses various templates
#                            register, resetpwd, pwdchanged, etc. 
#                        this options specifies prefix added to each template
#
# mail_code_expires - time in seconds, when code sent by e-mail expires
#
#login_failure_lock_time - time in seconds, how long is user locked after failed login
#                    - there should be 1 or 2 seconds to prevent brutal force
#                      attack to passwords or OTP. Note that this can also cause
#                      a DoS attack preventing the user to log-in.
#                      Because locking is made on name used for the login,
#                      the user can have an alternate login name.    
#
# report_svc         - path to program or script, which receives the stream of actions made by users
#                      These actions should be stored in a database to give user option to 
#                      see their receint actions with the account. The reporting system is not
#                      part of the loginsrv, because it can be also used with other parts of the IS
#                      Each action is JSON on single line
#                      
#
##################################
@include login_auth.ini
user_config=user_config.conf
token_expires=600
refresh_token_expires=63072000
captcha_svc=./captcha.cmd
mail_svc=./send_email.cmd
mail_template_prefix=example.
otp_issuer=MyService
mail_code_expires=259200
login_failure_lock_time=2
report_svc=./report.cmd


[database]
##################################
# CouchDB database setup
#
# user               - database credentials - username
# password           - database credentials - password
# url                - url to database (only http is supported)
# name               - name of the database
##################################
@include db_auth.ini
url=http://127.0.0.1:5984/
name=loginsrv

